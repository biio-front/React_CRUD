{"version":3,"sources":["component/Subject.js","component/TOC.js","component/Control.js","component/CreateContent.js","component/UpdateContent.js","component/ReadContent.js","App.js","index.js"],"names":["Subject","props","className","href","onClick","e","preventDefault","onChangePage","title","sub","TOC","id","list","Control","onChangeMode","data-btn","onDelete","CreateContent","action","method","onSubmit","target","value","desc","console","log","type","name","placeholder","cols","rows","UpdateContent","state","data","this","setState","onChange","inputFromHandler","Component","ReadContent","App","mode","selected_content_id","subject","welcome","contents","modeState","content_id","find","content","selectedBtn","dataset","btn","changeMode","length","_contents","concat","Array","from","splice","window","confirm","_id","getReadContent","forEach","i","_title","_desc","_article","selected_content","createSubmit","UpdateSubmit","map","changeReadContent","btnEvent","deleteContent","getContent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d35ddd29.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Subject(props) {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>\r\n        <a\r\n          href=\"/\"\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            props.onChangePage();\r\n          }}\r\n        >\r\n          {props.title}\r\n        </a>\r\n      </h1>\r\n      <p>{props.sub}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Subject;\r\n","import React from \"react\";\r\n\r\nfunction TOC(props) {\r\n  return (\r\n    <li>\r\n      <a\r\n        href={`/content/${props.id}`}\r\n        onClick={e => {\r\n          e.preventDefault();\r\n          props.onChangePage();\r\n        }}\r\n      >\r\n        {props.list}\r\n      </a>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default TOC;\r\n","import React from \"react\";\r\n\r\nfunction Control(props) {\r\n  return (\r\n    <div className=\"btn\">\r\n      <ul\r\n        onClick={e => {\r\n          e.preventDefault();\r\n          props.onChangeMode(e);\r\n        }}\r\n      >\r\n        <li>\r\n          <a href=\"/create\" data-btn=\"create\">\r\n            Create\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/update\" data-btn=\"update\">\r\n            Update\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <button data-btn=\"read\" onClick={props.onDelete}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Control;\r\n","import React from \"react\";\r\n\r\nfunction CreateContent(props) {\r\n  return (\r\n    <article>\r\n      <form\r\n        action=\"/create_process\"\r\n        method=\"post\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          props.onSubmit(e.target.title.value, e.target.desc.value);\r\n          console.log(\"submit!!!!!\");\r\n        }}\r\n      >\r\n        {/* methode가 psot방식으로 가야 url에 노출이 안됨. */}\r\n        <input type=\"text\" name=\"title\" placeholder=\"제목을 입력해주세요\" />\r\n        <textarea\r\n          name=\"desc\"\r\n          placeholder=\"내용을 입력해주세요\"\r\n          cols=\"30\"\r\n          rows=\"10\"\r\n        ></textarea>\r\n        <input type=\"submit\" value=\"제출하기\" />\r\n      </form>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default CreateContent;\r\n","import { Component } from \"react\";\r\n\r\nclass UpdateContent extends Component {\r\n  state = {\r\n    id: this.props.data.id,\r\n    title: this.props.data.title,\r\n    desc: this.props.data.desc,\r\n  };\r\n\r\n  inputFromHandler(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  // 객체 안에 key를 []로 감싸면 그 안에 있는 레퍼런스의 실제값이 key로 사용!:)\r\n\r\n  render() {\r\n    const { props, state } = this;\r\n    return (\r\n      <article>\r\n        <form\r\n          action=\"/create_process\"\r\n          method=\"post\"\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            props.onSubmit(state.id, state.title, state.desc);\r\n          }}\r\n        >\r\n          <input type=\"hidden\" name=\"id\" value={state.id} />\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"제목을 입력해주세요\"\r\n            value={state.title}\r\n            onChange={e => this.inputFromHandler(e)}\r\n          />\r\n          <textarea\r\n            name=\"desc\"\r\n            placeholder=\"내용을 입력해주세요\"\r\n            value={state.desc}\r\n            onChange={e => this.inputFromHandler(e)}\r\n            cols=\"30\"\r\n            rows=\"10\"\r\n          ></textarea>\r\n          <input type=\"submit\" value=\"제출하기\" />\r\n        </form>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdateContent;\r\n","import React from \"react\";\r\n\r\nfunction ReadContent(props) {\r\n  return (\r\n    <article>\r\n      <h2>{props.title}</h2>\r\n      <p>{props.desc}</p>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default ReadContent;\r\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport Subject from \"./component/Subject\";\nimport TOC from \"./component/TOC\";\nimport Control from \"./component/Control\";\nimport CreateContent from \"./component/CreateContent\";\nimport UpdateContent from \"./component/UpdateContent\";\nimport ReadContent from \"./component/ReadContent\";\n\nclass App extends Component {\n  state = {\n    mode: \"welcome\",\n    selected_content_id: 1,\n    subject: { title: \"WEB\", sub: \"Biio's practice web\" },\n    welcome: { title: \"Welcome\", desc: \"Hello, React!\" },\n    contents: [\n      { id: 1, title: \"HTML\", desc: \"HTML is HyperTexk Markup Language.\" },\n      { id: 2, title: \"CSS\", desc: \"CSS is for design\" },\n      { id: 3, title: \"JavaScript\", desc: \"JavaScript is for interactive\" },\n    ],\n  };\n\n  changeMode(modeState) {\n    this.setState({ mode: modeState });\n  }\n\n  // 다른 content로 이동\n  changeReadContent(content_id) {\n    this.setState({ selected_content_id: content_id });\n  }\n\n  // 현재 content 가져오기\n  getReadContent() {\n    const { contents, selected_content_id } = this.state;\n    return contents.find(content => content.id === selected_content_id);\n  }\n\n  // 쓰기, 수정, 삭제 버튼 활성화\n  btnEvent(e) {\n    const selectedBtn = e.target.dataset.btn;\n    this.changeMode(selectedBtn);\n  }\n\n  createSubmit(title, desc) {\n    const { contents } = this.state;\n    const content_id = this.state.contents.length + 1;\n    const content = { id: content_id, title, desc };\n    const _contents = contents.concat(content);\n    this.setState({\n      mode: \"read\",\n      selected_content_id: content_id,\n      contents: _contents,\n    });\n  }\n\n  UpdateSubmit(id, title, desc) {\n    const { contents } = this.state;\n    const content = { id, title, desc };\n    const _contents = Array.from(contents);\n    _contents.splice(id - 1, 1, content);\n    console.log(_contents);\n    this.setState({ mode: \"read\", contents: _contents });\n  }\n\n  deleteContent() {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      const { contents, selected_content_id } = this.state;\n      const _contents = Array.from(contents);\n      const _content = this.getReadContent();\n      const _id = _content.id;\n      _contents.splice(_id - 1, 1);\n      _contents.forEach((content, i) => (content.id = i + 1));\n      this.setState({\n        contents: _contents,\n        selected_content_id:\n          selected_content_id < contents.length\n            ? selected_content_id\n            : selected_content_id - 1,\n      });\n    }\n  }\n\n  // mode에 따라 다른 content 표시\n  getContent() {\n    const { mode, welcome } = this.state;\n    let _title = null;\n    let _desc = null;\n    let _article = null;\n\n    if (mode === \"welcome\") {\n      _title = welcome.title;\n      _desc = welcome.desc;\n      _article = <ReadContent title={_title} desc={_desc} />;\n    } else if (mode === \"read\") {\n      const selected_content = this.getReadContent();\n      _title = selected_content.title;\n      _desc = selected_content.desc;\n      _article = <ReadContent title={_title} desc={_desc} />;\n    } else if (mode === \"create\") {\n      _article = (\n        <CreateContent\n          onSubmit={(title, desc) => {\n            this.createSubmit(title, desc);\n          }}\n        />\n      );\n    } else if (mode === \"update\") {\n      const selected_content = this.getReadContent();\n      _article = (\n        <UpdateContent\n          data={selected_content}\n          onSubmit={(id, title, desc) => {\n            this.UpdateSubmit(id, title, desc);\n          }}\n        />\n      );\n    }\n    return _article;\n  }\n\n  render() {\n    const { subject, contents } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header>\n          <Subject\n            title={subject.title}\n            sub={subject.sub}\n            onChangePage={() => this.changeMode(\"welcome\")}\n          />\n          <nav>\n            <ul>\n              {contents.map(content => (\n                <TOC\n                  key={content.id}\n                  list={content.title}\n                  onChangePage={() => {\n                    this.changeMode(\"read\");\n                    this.changeReadContent(content.id);\n                  }}\n                />\n              ))}\n            </ul>\n          </nav>\n        </header>\n        <Control\n          onChangeMode={e => this.btnEvent(e)}\n          onDelete={() => this.deleteContent()}\n        />\n        {this.getContent()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}